#!/usr/bin/env bash

set -euo pipefail

_BUILD_DIR="$1"  # Provided by Heroku, but unused in this buildpack.
_CACHE_DIR="$2"  # Provided by Heroku, but unused in this buildpack.
ENV_DIR="$3"

http_get() {
  curl --netrc --silent --show-error --fail --retry 3 --retry-connrefused --connect-timeout 5 --max-time 30 "$@" || echo ''
}

echo "-----> Setting up git SSH to HTTPS override"

GITHUB_PAT=$(cat "$ENV_DIR/GITHUB_VCS_PACKAGES_ACCESS_TOKEN")


# Git URL as suggested by the GitHub UI for copy pasting.
git config --global --add url."https://github.com/".insteadOf "git@github.com:"
# Fully specified git URL using SSH, as might be generated by a package manager.
git config --global --add url."https://github.com/".insteadOf "ssh://git@github.com/"
echo "       Updated git config"


if grep --silent --no-messages "github.com" "$HOME/.netrc"; then
    echo "       Warning: Credentials for github.com may already be present in .netrc. This buildpack may not work as expected." >&2
fi

echo "machine github.com login x-oauth-token password $GITHUB_PAT" >> "$HOME/.netrc"
echo "machine api.github.com login x-oauth-token password $GITHUB_PAT" >> "$HOME/.netrc"
echo "       Updated the .netrc file"


USERNAME=$(http_get https://api.github.com/user | jq --raw-output .login)
if [ -z "$USERNAME" ]; then
  echo '       !!!! Failed to retrieve user information from GitHub. Is GITHUB_VCS_PACKAGES_ACCESS_TOKEN set to a valid token?' >&2
  echo '       !!!! See https://help.github.com/articles/creating-an-oauth-token-for-command-line-use' >&2
  exit 1
fi

ORGS="$(http_get https://api.github.com/user/orgs | jq --raw-output 'map(.login) | sort | join(", ")')"
if [ -z "$ORGS" ]; then
  ORGS="Unknown (Token needs at least 'read:org' or 'user' scopes to list organizations)"
fi

echo "       GitHub credentials set up for"
echo "         GitHub User:   ${USERNAME}"
echo "         Organizations: ${ORGS}"

echo "       GitHub credentials set up"
